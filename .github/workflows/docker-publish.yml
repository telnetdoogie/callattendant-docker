name: Publish release to DockerHub

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      is_dev: ${{ steps.check_version.outputs.is_dev }}
    steps:
      - name: Extract branch or tag name and determine if it's a dev release
        id: check_version
        run: |
          # Extract branch or tag name
          if [[ "$GITHUB_REF" == refs/heads/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/heads/}"  # Extract branch name
          elif [[ "$GITHUB_REF" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"   # Extract tag name
          else
            TAG_NAME="$GITHUB_REF"  # Fallback (shouldn't happen)
          fi
          echo "Extracted TAG_NAME: $TAG_NAME"
          # Check if TAG_NAME starts with "dev"
          if [[ "$TAG_NAME" == dev* ]]; then
            echo "is_dev=true" >> $GITHUB_ENV
            echo "is_dev=true" >> $GITHUB_OUTPUT
            echo "Detected a development release: $TAG_NAME"
          else
            echo "is_dev=false" >> $GITHUB_ENV
            echo "is_dev=false" >> $GITHUB_OUTPUT
            echo "Detected a production release: $TAG_NAME"
          fi
        shell: bash

  build-prod:
    needs: setup
    if: needs.setup.outputs.is_dev == 'false'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@8edcb1bdb4e267140fa742c62e395cd74f332709

      - name: Set up QEMU
        uses: docker/setup-qemu-action@05340d1c670183e7caabdb33ae9f1c80fae3b0c2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@3d100841f68d4548bf57e52eb27bd33ec5069f55
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image (Production Release)
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          provenance: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-dev:
    needs: setup
    if: needs.setup.outputs.is_dev == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@8edcb1bdb4e267140fa742c62e395cd74f332709

      - name: Set up QEMU
        uses: docker/setup-qemu-action@05340d1c670183e7caabdb33ae9f1c80fae3b0c2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@3d100841f68d4548bf57e52eb27bd33ec5069f55
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name == 'develop' && 'develop' || format('dev-{0}', github.ref_name) }}

      - name: Build and push Docker image (Development Release)
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          provenance: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name == 'develop' && 'develop' || format('dev-{0}', github.ref_name) }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
